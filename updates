import numpy as np

def history(D01,D02,D03,dlnpi_dw1, dlnpi_dw2, dlnpi_dw3):

    gamma=0.9

    D1=dlnpi_dw1+gamma*D01
    #print('first history',D1)
    D2=dlnpi_dw2+gamma*D02
    #print('second history',D2)
    D3=dlnpi_dw3+gamma*D03
    #print('the third history',D3)

    return D1,D2,D3

#########################################################
def pre_update(D1,D2,D3,y_hat,y_assess):
    eps=0.1
    r1 = 0.0004
    r2 = -0.0004
    b=0
    #print('y_assess',y_assess)
    #print('y_hat',y_hat)
    #print('the difference between ',abs(y_hat-y_assess))
    if abs(y_hat-y_assess)<=eps:
       # print('the reward is equal to',r1)
        dW1=  (r1 - b) * D1
        dW2 = (r1 - b) * D2
        dW3 = (r1 - b) * D3
     #   print('the weight updated W1 with r1',dW1)
     #   print('the weight updated W2 with r1', dW2)
      #  print('the weight updated W3 with r1', dW3)
    else:
        #print('the reward is equal to',r2)
        dW1 = (r2 - b) * D1
        dW2 = (r2 - b) * D2
        dW3 = (r2 - b) * D3
        #print('the weight updated W1 with r2', dW1,dW1.shape)
        #print('the weight updated W2 with r2', dW2,dW2.shape)
        #print('the weight updated W3 with r2', dW3,dW3.shape)
    return dW1,dW2,dW3

#########################################################

def update(W1,W2,W3,dW1,dW2,dW3):
    gama=0.9
    alpha1=0.000002
    alpha2=0.00002
    alpha3=0.000002
    W1= W1+alpha1*(1-gama)*dW1
